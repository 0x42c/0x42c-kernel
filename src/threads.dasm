; 0x42c-kernel thread management code.
; Licensed with the MIT license.

; Returns the current executing thread ID in A
get_current_thread_id:
    SET A, [current_thread_index]
    MUL A, 8
    ADD A, thread_table
    SET A, [A]
    SET PC, POP

; A: Pointer to thread; B: Stack size
; Thread begins after next context switch
; Returns thread ID in A, or -1 if thread creation failed.
start_thread:
	SET [context_switch_enabled], 0

	SET C, [active_threads]
	IFE C, max_threads
		SET PC, .max_threads_reached
	MUL C, 8
	ADD C, thread_table

	SET [context_switch_enabled], 1
	SET PC, POP
.max_threads_reached:
	SET [context_switch_enabled], 1
	SET A, -1
	SET PC, POP

; Handles context switching for multitasking; should never be called manually
; Switches context to next thread and returns
context_switch:
	IFE [context_switch_enabled], 0
    	SET PC, POP
	SET PC, POP